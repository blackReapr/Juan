@model IEnumerable<CartVM>

<div class="section-bg-color">
    @if (Model.Count() == 0)
    {
        <h1 class="text-center mb-4">Your cart is empty.</h1>
        <h3 class="text-center">
            <a asp-controller="shop" asp-action="index" style="color: #e3a51e">Go Shopping!</a>
        </h3>
    }
    else
    {
        <div class="row">
            <div class="col-lg-12">
                <!-- Cart Table Area -->
                <div class="cart-table table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th class="pro-thumbnail">Thumbnail</th>
                                <th class="pro-title">Product</th>
                                <th class="pro-price">Price</th>
                                <th class="pro-quantity">Quantity</th>
                                <th class="pro-subtotal">Total</th>
                                <th class="pro-remove">Remove</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (CartVM cart in Model)
                            {
                                <tr>
                                    <td class="pro-thumbnail"><a asp-controller="product" asp-action="detail" asp-route-id="@cart.Id"><img class="img-fluid" src="~/assets/img/product/@cart.Image" alt="@cart.Name" /></a></td>
                                    <td class="pro-title"><a asp-controller="product" asp-action="detail" asp-route-id="@cart.Id">@cart.Name</a></td>
                                    <td class="pro-price"><span>$@cart.Price.ToString("0.00")</span></td>
                                    <td class="pro-quantity">
                                        <div class="pro-qty" id="@cart.Id">
                                            <span class="dec qtybtn product-@cart.Id" onclick="control(@cart.Id, 'dec')">-</span>
                                            <input disabled type="text" value="@cart.Count">
                                            <span class="inc qtybtn product-@cart.Id" onclick="control(@cart.Id, 'inc')">+</span>
                                        </div>
                                    </td>
                                    <td class="pro-subtotal"><span>$@((cart.Price * cart.Count).ToString("0.00"))</span></td>
                                    <td class="pro-remove"><a style="cursor: pointer" onclick="removeProduct(@cart.Id)"><i class="fa fa-trash-o"></i></a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- Cart Update Option -->
                <div class="cart-update-option d-block d-md-flex justify-content-between">
                    <div class="apply-coupon-wrapper">
                        <form method="post" class=" d-block d-md-flex">
                            <input type="text" placeholder="Enter Your Coupon Code" name="coupon" />
                            <button class="btn">Apply Coupon</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-5 ml-auto">
                <!-- Cart Calculation Area -->
                <div class="cart-calculator-wrapper">
                    <div class="cart-calculate-items">
                        <h3>Cart Totals</h3>
                        <div class="table-responsive">
                            <table class="table">
                                <tr>
                                    <td>Sub Total</td>
                                    <td>$@Model.Sum(p => p.Price * p.Count).ToString("0.00")</td>
                                </tr>
                                <tr>
                                    <td>Shipping</td>
                                    <td>$70</td>
                                </tr>
                                <tr class="total">
                                    <td>Total</td>
                                    <td class="total-amount">$@Model.Sum(p => p.Price * p.Count).ToString("0.00")</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <a href="checkout.html" class="btn d-block">Proceed Checkout</a>
                </div>
            </div>
        </div>
    }
</div>




<script>
    // quantity change js
    function control(id, method) {
        const notification = document.querySelector(".notification");
        if (method == "inc") {
            axios.get("/cart/addtocart/" + id).then(res => {
                document.querySelector("#cart").innerHTML = res.data;
                notification.innerHTML = document.querySelectorAll(".minicart-item").length;
                toastr.options = {
                    'closeButton': true,
                    'debug': false,
                    'newestOnTop': false,
                    'progressBar': false,
                    'positionClass': 'toast-top-right',
                    'preventDuplicates': false,
                    'showDuration': '1000',
                    'hideDuration': '1000',
                    'timeOut': '5000',
                    'extendedTimeOut': '1000',
                    'showEasing': 'swing',
                    'hideEasing': 'linear',
                    'showMethod': 'fadeIn',
                    'hideMethod': 'fadeOut',
                }
                toastr.success("Product count has successfully been increased!");
                axios.get("/cart/cartindexpartial").then(res => {
                    document.querySelector("#cartContainer").innerHTML = res.data;
                })
            });
        } else {
            axios.get("/cart/decrement/" + id).then(res => {
                document.querySelector("#cart").innerHTML = res.data;
                notification.innerHTML = document.querySelectorAll(".minicart-item").length;
                toastr.options = {
                    'closeButton': true,
                    'debug': false,
                    'newestOnTop': false,
                    'progressBar': false,
                    'positionClass': 'toast-top-right',
                    'preventDuplicates': false,
                    'showDuration': '1000',
                    'hideDuration': '1000',
                    'timeOut': '5000',
                    'extendedTimeOut': '1000',
                    'showEasing': 'swing',
                    'hideEasing': 'linear',
                    'showMethod': 'fadeIn',
                    'hideMethod': 'fadeOut',
                }
                toastr.success("Product count has successfully been decreased!");
                axios.get("/cart/cartindexpartial").then(res => {
                    document.querySelector("#cartContainer").innerHTML = res.data;
                })
            });

        }
    };

    removeProduct = id => {
        const notification = document.querySelector(".notification");
        axios.delete("/cart/removeproduct/" + id).then(res => {
            document.querySelector("#cart").innerHTML = res.data;
            notification.innerHTML = document.querySelectorAll(".minicart-item").length;
            toastr.options = {
                'closeButton': true,
                'debug': false,
                'newestOnTop': false,
                'progressBar': false,
                'positionClass': 'toast-top-right',
                'preventDuplicates': false,
                'showDuration': '1000',
                'hideDuration': '1000',
                'timeOut': '5000',
                'extendedTimeOut': '1000',
                'showEasing': 'swing',
                'hideEasing': 'linear',
                'showMethod': 'fadeIn',
                'hideMethod': 'fadeOut',
            }
            toastr.success("Product has successfully been removed from your cart!");
            axios.get("/cart/cartindexpartial").then(res => {
                document.querySelector("#cartContainer").innerHTML = res.data;
            })
        })
    }
</script>

